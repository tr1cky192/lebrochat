{"ast":null,"code":"\"use strict\";\n\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriberClient = void 0;\nconst stream_1 = require(\"stream\");\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/subscriber_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./subscriber_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  The service that an application uses to manipulate subscriptions and to\n *  consume messages from a subscription via the `Pull` method or by\n *  establishing a bi-directional stream using the `StreamingPull` method.\n * @class\n * @memberof v1\n */\nclass SubscriberClient {\n  /**\n   * Construct an instance of SubscriberClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new SubscriberClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || staticMembers.servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_a = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _a !== void 0 ? _a : {};\n    const fallback = (_b = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _b !== void 0 ? _b : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = staticMembers.servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === staticMembers.servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process !== 'undefined' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n      projectTopicPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/topics/{topic}'),\n      schemaPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/schemas/{schema}'),\n      snapshotPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/snapshots/{snapshot}'),\n      subscriptionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/subscriptions/{subscription}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listSubscriptions: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'subscriptions'),\n      listSnapshots: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'snapshots')\n    };\n    // Some of the methods on this service provide streaming responses.\n    // Provide descriptors for these.\n    this.descriptors.stream = {\n      streamingPull: new this._gaxModule.StreamDescriptor(this._gaxModule.StreamType.BIDI_STREAMING, !!opts.fallback)\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.pubsub.v1.Subscriber', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.subscriberStub) {\n      return this.subscriberStub;\n    }\n    // Put together the \"service stub\" for\n    // google.pubsub.v1.Subscriber.\n    this.subscriberStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.pubsub.v1.Subscriber') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.pubsub.v1.Subscriber, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const subscriberStubMethods = ['createSubscription', 'getSubscription', 'updateSubscription', 'listSubscriptions', 'deleteSubscription', 'modifyAckDeadline', 'acknowledge', 'pull', 'streamingPull', 'modifyPushConfig', 'getSnapshot', 'listSnapshots', 'createSnapshot', 'updateSnapshot', 'deleteSnapshot', 'seek'];\n    for (const methodName of subscriberStubMethods) {\n      const callPromise = this.subscriberStub.then(stub => (...args) => {\n        if (this._terminated) {\n          if (methodName in this.descriptors.stream) {\n            const stream = new stream_1.PassThrough();\n            setImmediate(() => {\n              stream.emit('error', new this._gaxModule.GoogleError('The client has already been closed.'));\n            });\n            return stream;\n          }\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.stream[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.subscriberStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    return 'pubsub.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath(),\n   * exists for compatibility reasons.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    return 'pubsub.googleapis.com';\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/pubsub'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  createSubscription(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createSubscription(request, options, callback);\n  }\n  getSubscription(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getSubscription(request, options, callback);\n  }\n  updateSubscription(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'subscription.name': (_a = request.subscription.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateSubscription(request, options, callback);\n  }\n  deleteSubscription(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteSubscription(request, options, callback);\n  }\n  modifyAckDeadline(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.modifyAckDeadline(request, options, callback);\n  }\n  acknowledge(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.acknowledge(request, options, callback);\n  }\n  pull(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.pull(request, options, callback);\n  }\n  modifyPushConfig(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.modifyPushConfig(request, options, callback);\n  }\n  getSnapshot(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      snapshot: (_a = request.snapshot) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getSnapshot(request, options, callback);\n  }\n  createSnapshot(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createSnapshot(request, options, callback);\n  }\n  updateSnapshot(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'snapshot.name': (_a = request.snapshot.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateSnapshot(request, options, callback);\n  }\n  deleteSnapshot(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      snapshot: (_a = request.snapshot) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteSnapshot(request, options, callback);\n  }\n  seek(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      subscription: (_a = request.subscription) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.seek(request, options, callback);\n  }\n  /**\n   * Establishes a stream with the server, which sends messages down to the\n   * client. The client streams acknowledgements and ack deadline modifications\n   * back to the server. The server will close the stream and return the status\n   * on any error. The server may close the stream with status `UNAVAILABLE` to\n   * reassign server-side resources, in which case, the client should\n   * re-establish the stream. Flow control can be achieved by configuring the\n   * underlying RPC channel.\n   *\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which is both readable and writable. It accepts objects\n   *   representing {@link google.pubsub.v1.StreamingPullRequest | StreamingPullRequest} for write() method, and\n   *   will emit objects representing {@link google.pubsub.v1.StreamingPullResponse | StreamingPullResponse} on 'data' event asynchronously.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#bi-directional-streaming)\n   *   for more details and examples.\n   */\n  streamingPull(options) {\n    this.initialize();\n    return this.innerApiCalls.streamingPull(null, options);\n  }\n  listSubscriptions(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project: (_a = request.project) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listSubscriptions(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.project\n   *   Required. The name of the project in which to list subscriptions.\n   *   Format is `projects/{project-id}`.\n   * @param {number} request.pageSize\n   *   Maximum number of subscriptions to return.\n   * @param {string} request.pageToken\n   *   The value returned by the last `ListSubscriptionsResponse`; indicates that\n   *   this is a continuation of a prior `ListSubscriptions` call, and that the\n   *   system should return the next page of data.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link google.pubsub.v1.Subscription | Subscription} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listSubscriptionsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSubscriptionsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project: (_a = request.project) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSubscriptions'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSubscriptions.createStream(this.innerApiCalls.listSubscriptions, request, callSettings);\n  }\n  /**\n   * Equivalent to `listSubscriptions`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.project\n   *   Required. The name of the project in which to list subscriptions.\n   *   Format is `projects/{project-id}`.\n   * @param {number} request.pageSize\n   *   Maximum number of subscriptions to return.\n   * @param {string} request.pageToken\n   *   The value returned by the last `ListSubscriptionsResponse`; indicates that\n   *   this is a continuation of a prior `ListSubscriptions` call, and that the\n   *   system should return the next page of data.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link google.pubsub.v1.Subscription | Subscription}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSubscriptionsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project: (_a = request.project) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSubscriptions'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSubscriptions.asyncIterate(this.innerApiCalls['listSubscriptions'], request, callSettings);\n  }\n  listSnapshots(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project: (_a = request.project) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listSnapshots(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.project\n   *   Required. The name of the project in which to list snapshots.\n   *   Format is `projects/{project-id}`.\n   * @param {number} request.pageSize\n   *   Maximum number of snapshots to return.\n   * @param {string} request.pageToken\n   *   The value returned by the last `ListSnapshotsResponse`; indicates that this\n   *   is a continuation of a prior `ListSnapshots` call, and that the system\n   *   should return the next page of data.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link google.pubsub.v1.Snapshot | Snapshot} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listSnapshotsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSnapshotsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project: (_a = request.project) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSnapshots'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSnapshots.createStream(this.innerApiCalls.listSnapshots, request, callSettings);\n  }\n  /**\n   * Equivalent to `listSnapshots`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.project\n   *   Required. The name of the project in which to list snapshots.\n   *   Format is `projects/{project-id}`.\n   * @param {number} request.pageSize\n   *   Maximum number of snapshots to return.\n   * @param {string} request.pageToken\n   *   The value returned by the last `ListSnapshotsResponse`; indicates that this\n   *   is a continuation of a prior `ListSnapshots` call, and that the system\n   *   should return the next page of data.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link google.pubsub.v1.Snapshot | Snapshot}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSnapshotsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      project: (_a = request.project) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSnapshots'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSnapshots.asyncIterate(this.innerApiCalls['listSnapshots'], request, callSettings);\n  }\n  /**\n   * Gets the access control policy for a resource. Returns an empty policy\n   * if the resource exists and does not have a policy set.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.resource\n   *   REQUIRED: The resource for which the policy is being requested.\n   *   See the operation documentation for the appropriate value for this field.\n   * @param {Object} [request.options]\n   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to\n   *   `GetIamPolicy`. This field is only used by Cloud IAM.\n   *\n   *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.\n   * @param {Object} [options]\n   *   Optional parameters. You can override the default settings for this call, e.g, timeout,\n   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.\n   * @param {function(?Error, ?Object)} [callback]\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API call.\n   */\n  getIamPolicy(request, options, callback) {\n    return this.iamClient.getIamPolicy(request, options, callback);\n  }\n  /**\n   * Returns permissions that a caller has on the specified resource. If the\n   * resource does not exist, this will return an empty set of\n   * permissions, not a NOT_FOUND error.\n   *\n   * Note: This operation is designed to be used for building\n   * permission-aware UIs and command-line tools, not for authorization\n   * checking. This operation may \"fail open\" without warning.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.resource\n   *   REQUIRED: The resource for which the policy detail is being requested.\n   *   See the operation documentation for the appropriate value for this field.\n   * @param {string[]} request.permissions\n   *   The set of permissions to check for the `resource`. Permissions with\n   *   wildcards (such as '*' or 'storage.*') are not allowed. For more\n   *   information see\n   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n   * @param {Object} [options]\n   *   Optional parameters. You can override the default settings for this call, e.g, timeout,\n   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.\n   * @param {function(?Error, ?Object)} [callback]\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API call.\n   */\n  setIamPolicy(request, options, callback) {\n    return this.iamClient.setIamPolicy(request, options, callback);\n  }\n  /**\n   * Returns permissions that a caller has on the specified resource. If the\n   * resource does not exist, this will return an empty set of\n   * permissions, not a NOT_FOUND error.\n   *\n   * Note: This operation is designed to be used for building\n   * permission-aware UIs and command-line tools, not for authorization\n   * checking. This operation may \"fail open\" without warning.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.resource\n   *   REQUIRED: The resource for which the policy detail is being requested.\n   *   See the operation documentation for the appropriate value for this field.\n   * @param {string[]} request.permissions\n   *   The set of permissions to check for the `resource`. Permissions with\n   *   wildcards (such as '*' or 'storage.*') are not allowed. For more\n   *   information see\n   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n   * @param {Object} [options]\n   *   Optional parameters. You can override the default settings for this call, e.g, timeout,\n   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.\n   * @param {function(?Error, ?Object)} [callback]\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API call.\n   *\n   */\n  testIamPermissions(request, options, callback) {\n    return this.iamClient.testIamPermissions(request, options, callback);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified project resource name string.\n   *\n   * @param {string} project\n   * @returns {string} Resource name string.\n   */\n  projectPath(project) {\n    return this.pathTemplates.projectPathTemplate.render({\n      project: project\n    });\n  }\n  /**\n   * Parse the project from Project resource.\n   *\n   * @param {string} projectName\n   *   A fully-qualified path representing Project resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectName(projectName) {\n    return this.pathTemplates.projectPathTemplate.match(projectName).project;\n  }\n  /**\n   * Return a fully-qualified projectTopic resource name string.\n   *\n   * @param {string} project\n   * @param {string} topic\n   * @returns {string} Resource name string.\n   */\n  projectTopicPath(project, topic) {\n    return this.pathTemplates.projectTopicPathTemplate.render({\n      project: project,\n      topic: topic\n    });\n  }\n  /**\n   * Parse the project from ProjectTopic resource.\n   *\n   * @param {string} projectTopicName\n   *   A fully-qualified path representing project_topic resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectTopicName(projectTopicName) {\n    return this.pathTemplates.projectTopicPathTemplate.match(projectTopicName).project;\n  }\n  /**\n   * Parse the topic from ProjectTopic resource.\n   *\n   * @param {string} projectTopicName\n   *   A fully-qualified path representing project_topic resource.\n   * @returns {string} A string representing the topic.\n   */\n  matchTopicFromProjectTopicName(projectTopicName) {\n    return this.pathTemplates.projectTopicPathTemplate.match(projectTopicName).topic;\n  }\n  /**\n   * Return a fully-qualified schema resource name string.\n   *\n   * @param {string} project\n   * @param {string} schema\n   * @returns {string} Resource name string.\n   */\n  schemaPath(project, schema) {\n    return this.pathTemplates.schemaPathTemplate.render({\n      project: project,\n      schema: schema\n    });\n  }\n  /**\n   * Parse the project from Schema resource.\n   *\n   * @param {string} schemaName\n   *   A fully-qualified path representing Schema resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromSchemaName(schemaName) {\n    return this.pathTemplates.schemaPathTemplate.match(schemaName).project;\n  }\n  /**\n   * Parse the schema from Schema resource.\n   *\n   * @param {string} schemaName\n   *   A fully-qualified path representing Schema resource.\n   * @returns {string} A string representing the schema.\n   */\n  matchSchemaFromSchemaName(schemaName) {\n    return this.pathTemplates.schemaPathTemplate.match(schemaName).schema;\n  }\n  /**\n   * Return a fully-qualified snapshot resource name string.\n   *\n   * @param {string} project\n   * @param {string} snapshot\n   * @returns {string} Resource name string.\n   */\n  snapshotPath(project, snapshot) {\n    return this.pathTemplates.snapshotPathTemplate.render({\n      project: project,\n      snapshot: snapshot\n    });\n  }\n  /**\n   * Parse the project from Snapshot resource.\n   *\n   * @param {string} snapshotName\n   *   A fully-qualified path representing Snapshot resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromSnapshotName(snapshotName) {\n    return this.pathTemplates.snapshotPathTemplate.match(snapshotName).project;\n  }\n  /**\n   * Parse the snapshot from Snapshot resource.\n   *\n   * @param {string} snapshotName\n   *   A fully-qualified path representing Snapshot resource.\n   * @returns {string} A string representing the snapshot.\n   */\n  matchSnapshotFromSnapshotName(snapshotName) {\n    return this.pathTemplates.snapshotPathTemplate.match(snapshotName).snapshot;\n  }\n  /**\n   * Return a fully-qualified subscription resource name string.\n   *\n   * @param {string} project\n   * @param {string} subscription\n   * @returns {string} Resource name string.\n   */\n  subscriptionPath(project, subscription) {\n    return this.pathTemplates.subscriptionPathTemplate.render({\n      project: project,\n      subscription: subscription\n    });\n  }\n  /**\n   * Parse the project from Subscription resource.\n   *\n   * @param {string} subscriptionName\n   *   A fully-qualified path representing Subscription resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromSubscriptionName(subscriptionName) {\n    return this.pathTemplates.subscriptionPathTemplate.match(subscriptionName).project;\n  }\n  /**\n   * Parse the subscription from Subscription resource.\n   *\n   * @param {string} subscriptionName\n   *   A fully-qualified path representing Subscription resource.\n   * @returns {string} A string representing the subscription.\n   */\n  matchSubscriptionFromSubscriptionName(subscriptionName) {\n    return this.pathTemplates.subscriptionPathTemplate.match(subscriptionName).subscription;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.subscriberStub && !this._terminated) {\n      return this.subscriberStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.iamClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.SubscriberClient = SubscriberClient;","map":{"version":3,"names":["stream_1","require","jsonProtos","gapicConfig","version","SubscriberClient","constructor","opts","gaxInstance","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","_a","fallback","_b","window","fetch","Object","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","iamClient","IamClient","clientHeader","process","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","projectPathTemplate","PathTemplate","projectTopicPathTemplate","schemaPathTemplate","snapshotPathTemplate","subscriptionPathTemplate","listSubscriptions","PageDescriptor","listSnapshots","streamingPull","StreamDescriptor","StreamType","BIDI_STREAMING","_defaults","constructSettings","join","innerApiCalls","warn","initialize","subscriberStub","createStub","lookupService","google","pubsub","v1","Subscriber","subscriberStubMethods","methodName","callPromise","then","stub","args","PassThrough","setImmediate","emit","GoogleError","Promise","reject","func","apply","err","descriptor","undefined","apiCall","createApiCall","getProjectId","callback","createSubscription","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","name","getSubscription","subscription","updateSubscription","deleteSubscription","modifyAckDeadline","acknowledge","pull","modifyPushConfig","getSnapshot","snapshot","createSnapshot","updateSnapshot","deleteSnapshot","seek","project","listSubscriptionsStream","defaultCallSettings","callSettings","merge","createStream","listSubscriptionsAsync","asyncIterate","listSnapshotsStream","listSnapshotsAsync","getIamPolicy","setIamPolicy","testIamPermissions","projectPath","render","matchProjectFromProjectName","projectName","match","projectTopicPath","topic","matchProjectFromProjectTopicName","projectTopicName","matchTopicFromProjectTopicName","schemaPath","schema","matchProjectFromSchemaName","schemaName","matchSchemaFromSchemaName","snapshotPath","matchProjectFromSnapshotName","snapshotName","matchSnapshotFromSnapshotName","subscriptionPath","matchProjectFromSubscriptionName","subscriptionName","matchSubscriptionFromSubscriptionName","close","resolve","exports"],"sources":["../../../src/v1/subscriber_client.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}