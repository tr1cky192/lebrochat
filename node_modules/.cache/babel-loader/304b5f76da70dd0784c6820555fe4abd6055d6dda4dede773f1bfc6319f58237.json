{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageBatch = void 0;\nconst _1 = require(\"./\");\nconst pubsub_message_1 = require(\"./pubsub-message\");\n/**\n * @typedef BatchPublishOptions\n * @property {number} [maxBytes=1 * 1024 * 1024] The maximum number of bytes to\n *     buffer before sending a payload.\n * @property {number} [maxMessages=100] The maximum number of messages to\n *     buffer before sending a payload.\n * @property {number} [maxMilliseconds=10] The maximum duration to wait before\n *     sending a payload.\n */\n/**\n * Call used to help batch messages.\n *\n * @private\n *\n * @param {BatchPublishOptions} options The batching options.\n */\nclass MessageBatch {\n  constructor(options) {\n    this.options = options;\n    this.messages = [];\n    this.callbacks = [];\n    this.created = Date.now();\n    this.bytes = 0;\n  }\n  /**\n   * Updates our options from new values.\n   *\n   * @param {BatchPublishOptions} options The new options.\n   */\n  setOptions(options) {\n    this.options = options;\n  }\n  /**\n   * Adds a message to the current batch.\n   *\n   * @param {object} message The message to publish.\n   * @param {PublishCallback} callback The callback function.\n   */\n  add(message, callback) {\n    this.messages.push(message);\n    this.callbacks.push(callback);\n    this.bytes += (0, pubsub_message_1.calculateMessageSize)(message);\n  }\n  /**\n   * Indicates if a given message can fit in the batch.\n   *\n   * @param {object} message The message in question.\n   * @returns {boolean}\n   */\n  canFit(message) {\n    const {\n      maxMessages,\n      maxBytes\n    } = this.options;\n    return this.messages.length < maxMessages && this.bytes + (0, pubsub_message_1.calculateMessageSize)(message) <= maxBytes;\n  }\n  /**\n   * Checks to see if this batch is at the maximum allowed payload size.\n   * When publishing ordered messages, it is ok to exceed the user configured\n   * thresholds while a batch is in flight.\n   *\n   * @returns {boolean}\n   */\n  isAtMax() {\n    const {\n      maxMessages,\n      maxBytes\n    } = _1.BATCH_LIMITS;\n    return this.messages.length >= maxMessages || this.bytes >= maxBytes;\n  }\n  /**\n   * Indicates if the batch is at capacity.\n   *\n   * @returns {boolean}\n   */\n  isFull() {\n    const {\n      maxMessages,\n      maxBytes\n    } = this.options;\n    return this.messages.length >= maxMessages || this.bytes >= maxBytes;\n  }\n}\nexports.MessageBatch = MessageBatch;","map":{"version":3,"names":["_1","require","pubsub_message_1","MessageBatch","constructor","options","messages","callbacks","created","Date","now","bytes","setOptions","add","message","callback","push","calculateMessageSize","canFit","maxMessages","maxBytes","length","isAtMax","BATCH_LIMITS","isFull","exports"],"sources":["../../../src/publisher/message-batch.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA,MAAAA,EAAA,GAAAC,OAAA;AACA,MAAAC,gBAAA,GAAAD,OAAA;AAQA;;;;;;;;;AASA;;;;;;;AAOA,MAAaE,YAAY;EAMvBC,YAAYC,OAA4B;IACtC,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAGC,IAAI,CAACC,GAAG,EAAE;IACzB,IAAI,CAACC,KAAK,GAAG,CAAC;EAChB;EAEA;;;;;EAKAC,UAAUA,CAACP,OAA4B;IACrC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEA;;;;;;EAMAQ,GAAGA,CAACC,OAAsB,EAAEC,QAAyB;IACnD,IAAI,CAACT,QAAQ,CAACU,IAAI,CAACF,OAAO,CAAC;IAC3B,IAAI,CAACP,SAAS,CAACS,IAAI,CAACD,QAAQ,CAAC;IAC7B,IAAI,CAACJ,KAAK,IAAI,IAAAT,gBAAA,CAAAe,oBAAoB,EAACH,OAAO,CAAC;EAC7C;EACA;;;;;;EAMAI,MAAMA,CAACJ,OAAsB;IAC3B,MAAM;MAACK,WAAW;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACf,OAAO;IAC5C,OACE,IAAI,CAACC,QAAQ,CAACe,MAAM,GAAGF,WAAY,IACnC,IAAI,CAACR,KAAK,GAAG,IAAAT,gBAAA,CAAAe,oBAAoB,EAACH,OAAO,CAAC,IAAIM,QAAS;EAE3D;EACA;;;;;;;EAOAE,OAAOA,CAAA;IACL,MAAM;MAACH,WAAW;MAAEC;IAAQ,CAAC,GAAGpB,EAAA,CAAAuB,YAAY;IAC5C,OAAO,IAAI,CAACjB,QAAQ,CAACe,MAAM,IAAIF,WAAY,IAAI,IAAI,CAACR,KAAK,IAAIS,QAAS;EACxE;EACA;;;;;EAKAI,MAAMA,CAAA;IACJ,MAAM;MAACL,WAAW;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACf,OAAO;IAC5C,OAAO,IAAI,CAACC,QAAQ,CAACe,MAAM,IAAIF,WAAY,IAAI,IAAI,CAACR,KAAK,IAAIS,QAAS;EACxE;;AAlEFK,OAAA,CAAAtB,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}