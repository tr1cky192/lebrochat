{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlowControl = void 0;\nconst defer = require(\"p-defer\");\n/**\n * Manages flow control handling for max bytes and messages.\n *\n * Do not use this class externally, it may change without warning.\n * @private\n *\n */\nclass FlowControl {\n  constructor(options) {\n    this.options = {};\n    this.setOptions(options);\n    this.bytes = this.messages = 0;\n    this.requests = [];\n  }\n  /**\n   * Update our options after the fact.\n   *\n   * Do not use externally, it may change without warning.\n   * @private\n   */\n  setOptions(options) {\n    this.options = options;\n    if (this.options.maxOutstandingBytes === 0 || this.options.maxOutstandingMessages === 0) {\n      // Undefined is okay, but if either is zero, no publishes ever happen.\n      throw new Error('When using publisher flow control, maxOutstandingBytes and maxOutstandingMessages must not be zero');\n    }\n  }\n  /**\n   * @returns {number} The number of bytes that are queued up.\n   */\n  get currentByteCount() {\n    return this.bytes;\n  }\n  /**\n   * @returns {number} The number of messages that are queued up.\n   */\n  get currentMessageCount() {\n    return this.messages;\n  }\n  /**\n   * Adds the specified number of bytes or messages to our count. We'll\n   * assume that this is end running around our queueing mechanisms.\n   *\n   * @param {number} bytes The number of bytes to add to the count.\n   * @param {number} messages The number of messages to add to the count.\n   */\n  addToCount(bytes, messages) {\n    this.bytes += bytes;\n    this.messages += messages;\n  }\n  /**\n   * Attempts to queue the specified number of bytes and messages. If\n   * there are too many things in the publisher flow control queue\n   * already, we will defer and come back to it.\n   *\n   * Do not use externally, it may change without warning.\n   * @private\n   */\n  async willSend(bytes, messages) {\n    // Add this to our queue size.\n    this.bytes += bytes;\n    this.messages += messages;\n    // If this request won't fit, we have to put it in the queue.\n    if (this.exceeded()) {\n      const promise = defer();\n      this.requests.push({\n        promise: promise.promise,\n        resolve: promise.resolve,\n        reject: promise.reject,\n        bytes,\n        messageCount: messages\n      });\n      // This will pass through when someone else's this.sent() completes.\n      await promise.promise;\n    }\n  }\n  /**\n   * Removes the specified number of bytes and messages from our queued\n   * counts, after a deferred request was released. If there is enough\n   * space.\n   *\n   * Do not use externally, it may change without warning.\n   * @private\n   */\n  sent(bytes, messages) {\n    this.bytes -= bytes;\n    this.messages -= messages;\n    // This shouldn't happen, but just be sure.\n    if (this.bytes < 0) this.bytes = 0;\n    if (this.messages < 0) this.messages = 0;\n    // Let things waiting on willSend() have a go, if there's space.\n    if (this.requests.length > 0 && !this.exceeded()) {\n      const next = this.requests.shift();\n      next.resolve();\n    }\n  }\n  // Just uses wouldExceed() to see if we've already exceeded the limits.\n  exceeded() {\n    return this.wouldExceed(0, 0);\n  }\n  /**\n   * Returns true if adding the specified number of bytes or messages\n   * would exceed limits imposed by configuration.\n   *\n   * Do not use externally, it may change without warning.\n   * @private\n   */\n  wouldExceed(bytes, messages) {\n    const totalBytes = this.bytes + bytes;\n    const totalMessages = this.messages + messages;\n    if (this.options.maxOutstandingBytes !== undefined && totalBytes > this.options.maxOutstandingBytes) {\n      return true;\n    }\n    if (this.options.maxOutstandingMessages !== undefined && totalMessages > this.options.maxOutstandingMessages) {\n      return true;\n    }\n    return false;\n  }\n}\nexports.FlowControl = FlowControl;","map":{"version":3,"names":["defer","require","FlowControl","constructor","options","setOptions","bytes","messages","requests","maxOutstandingBytes","maxOutstandingMessages","Error","currentByteCount","currentMessageCount","addToCount","willSend","exceeded","promise","push","resolve","reject","messageCount","sent","length","next","shift","wouldExceed","totalBytes","totalMessages","undefined","exports"],"sources":["../../../src/publisher/flow-control.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA,MAAAA,KAAA,GAAAC,OAAA;AAyBA;;;;;;;AAOA,MAAaC,WAAW;EAMtBC,YAAYC,OAA2B;IALvC,KAAAA,OAAO,GAAuB,EAAE;IAM9B,IAAI,CAACC,UAAU,CAACD,OAAO,CAAC;IACxB,IAAI,CAACE,KAAK,GAAG,IAAI,CAACC,QAAQ,GAAG,CAAC;IAC9B,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAEA;;;;;;EAMAH,UAAUA,CAACD,OAA2B;IACpC,IAAI,CAACA,OAAO,GAAGA,OAAO;IAEtB,IACE,IAAI,CAACA,OAAO,CAACK,mBAAmB,KAAK,CAAC,IACtC,IAAI,CAACL,OAAO,CAACM,sBAAsB,KAAK,CAAC,EACzC;MACA;MACA,MAAM,IAAIC,KAAK,CACb,oGAAoG,CACrG;;EAEL;EAEA;;;EAGA,IAAIC,gBAAgBA,CAAA;IAClB,OAAO,IAAI,CAACN,KAAK;EACnB;EAEA;;;EAGA,IAAIO,mBAAmBA,CAAA;IACrB,OAAO,IAAI,CAACN,QAAQ;EACtB;EAEA;;;;;;;EAOAO,UAAUA,CAACR,KAAa,EAAEC,QAAgB;IACxC,IAAI,CAACD,KAAK,IAAIA,KAAK;IACnB,IAAI,CAACC,QAAQ,IAAIA,QAAQ;EAC3B;EAEA;;;;;;;;EAQA,MAAMQ,QAAQA,CAACT,KAAa,EAAEC,QAAgB;IAC5C;IACA,IAAI,CAACD,KAAK,IAAIA,KAAK;IACnB,IAAI,CAACC,QAAQ,IAAIA,QAAQ;IAEzB;IACA,IAAI,IAAI,CAACS,QAAQ,EAAE,EAAE;MACnB,MAAMC,OAAO,GAAGjB,KAAK,EAAQ;MAC7B,IAAI,CAACQ,QAAQ,CAACU,IAAI,CAAC;QACjBD,OAAO,EAAEA,OAAO,CAACA,OAAO;QACxBE,OAAO,EAAEF,OAAO,CAACE,OAAO;QACxBC,MAAM,EAAEH,OAAO,CAACG,MAAM;QACtBd,KAAK;QACLe,YAAY,EAAEd;OACf,CAAC;MAEF;MACA,MAAMU,OAAO,CAACA,OAAO;;EAEzB;EAEA;;;;;;;;EAQAK,IAAIA,CAAChB,KAAa,EAAEC,QAAgB;IAClC,IAAI,CAACD,KAAK,IAAIA,KAAK;IACnB,IAAI,CAACC,QAAQ,IAAIA,QAAQ;IAEzB;IACA,IAAI,IAAI,CAACD,KAAK,GAAG,CAAC,EAAE,IAAI,CAACA,KAAK,GAAG,CAAC;IAClC,IAAI,IAAI,CAACC,QAAQ,GAAG,CAAC,EAAE,IAAI,CAACA,QAAQ,GAAG,CAAC;IAExC;IACA,IAAI,IAAI,CAACC,QAAQ,CAACe,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE,EAAE;MAChD,MAAMQ,IAAI,GAAG,IAAI,CAAChB,QAAQ,CAACiB,KAAK,EAAG;MACnCD,IAAI,CAACL,OAAO,EAAE;;EAElB;EAEA;EACQH,QAAQA,CAAA;IACd,OAAO,IAAI,CAACU,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/B;EAEA;;;;;;;EAOAA,WAAWA,CAACpB,KAAa,EAAEC,QAAgB;IACzC,MAAMoB,UAAU,GAAG,IAAI,CAACrB,KAAK,GAAGA,KAAK;IACrC,MAAMsB,aAAa,GAAG,IAAI,CAACrB,QAAQ,GAAGA,QAAQ;IAE9C,IACE,IAAI,CAACH,OAAO,CAACK,mBAAmB,KAAKoB,SAAS,IAC9CF,UAAU,GAAG,IAAI,CAACvB,OAAO,CAACK,mBAAmB,EAC7C;MACA,OAAO,IAAI;;IAGb,IACE,IAAI,CAACL,OAAO,CAACM,sBAAsB,KAAKmB,SAAS,IACjDD,aAAa,GAAG,IAAI,CAACxB,OAAO,CAACM,sBAAsB,EACnD;MACA,OAAO,IAAI;;IAGb,OAAO,KAAK;EACd;;AA7IFoB,OAAA,CAAA5B,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}