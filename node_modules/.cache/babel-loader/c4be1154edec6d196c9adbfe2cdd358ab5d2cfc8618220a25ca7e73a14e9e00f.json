{"ast":null,"code":"\"use strict\";\n\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Duration = void 0;\n/**\n * Duration class with an interface similar to the tc39 Temporal\n * proposal. Since it's not fully finalized, and polyfills have\n * inconsistent compatibility, for now this shim class will be\n * used to set durations in Pub/Sub.\n *\n * This class will remain here for at least the next major version,\n * eventually to be replaced by the tc39 Temporal built-in.\n *\n * https://tc39.es/proposal-temporal/docs/duration.html\n */\nclass Duration {\n  constructor(millis) {\n    this.millis = millis;\n  }\n  /**\n   * Calculates the total number of units of type 'totalOf' that would\n   * fit inside this duration.\n   */\n  totalOf(totalOf) {\n    switch (totalOf) {\n      case 'hour':\n        return this.millis / Duration.hourInMillis;\n      case 'minute':\n        return this.millis / Duration.minuteInMillis;\n      case 'second':\n        return this.millis / Duration.secondInMillis;\n      case 'millisecond':\n        return this.millis;\n      default:\n        throw new Error(`Invalid unit in call to totalOf(): ${totalOf}`);\n    }\n  }\n  /**\n   * Creates a Duration from a DurationLike, which is an object\n   * containing zero or more of the following: hours, seconds,\n   * minutes, millis.\n   */\n  static from(durationLike) {\n    var _a, _b, _c, _d;\n    let millis = (_a = durationLike.millis) !== null && _a !== void 0 ? _a : 0;\n    millis += ((_b = durationLike.seconds) !== null && _b !== void 0 ? _b : 0) * Duration.secondInMillis;\n    millis += ((_c = durationLike.minutes) !== null && _c !== void 0 ? _c : 0) * Duration.minuteInMillis;\n    millis += ((_d = durationLike.hours) !== null && _d !== void 0 ? _d : 0) * Duration.hourInMillis;\n    return new Duration(millis);\n  }\n}\nexports.Duration = Duration;\nDuration.secondInMillis = 1000;\nDuration.minuteInMillis = Duration.secondInMillis * 60;\nDuration.hourInMillis = Duration.minuteInMillis * 60;","map":{"version":3,"names":["Duration","constructor","millis","totalOf","hourInMillis","minuteInMillis","secondInMillis","Error","from","durationLike","_a","_b","seconds","_c","minutes","_d","hours","exports"],"sources":["../../src/temporal.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AA6BA;;;;;;;;;;;AAWA,MAAaA,QAAQ;EAOnBC,YAAoBC,MAAc;IAChC,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEA;;;;EAIAC,OAAOA,CAACA,OAAoB;IAC1B,QAAQA,OAAO;MACb,KAAK,MAAM;QACT,OAAO,IAAI,CAACD,MAAM,GAAGF,QAAQ,CAACI,YAAY;MAC5C,KAAK,QAAQ;QACX,OAAO,IAAI,CAACF,MAAM,GAAGF,QAAQ,CAACK,cAAc;MAC9C,KAAK,QAAQ;QACX,OAAO,IAAI,CAACH,MAAM,GAAGF,QAAQ,CAACM,cAAc;MAC9C,KAAK,aAAa;QAChB,OAAO,IAAI,CAACJ,MAAM;MACpB;QACE,MAAM,IAAIK,KAAK,CAAC,sCAAsCJ,OAAO,EAAE,CAAC;;EAEtE;EAEA;;;;;EAKA,OAAOK,IAAIA,CAACC,YAA0B;;IACpC,IAAIP,MAAM,GAAG,CAAAQ,EAAA,GAAAD,YAAY,CAACP,MAAM,cAAAQ,EAAA,cAAAA,EAAA,GAAI,CAAC;IACrCR,MAAM,IAAI,CAAC,CAAAS,EAAA,GAAAF,YAAY,CAACG,OAAO,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC,IAAIX,QAAQ,CAACM,cAAc;IAC/DJ,MAAM,IAAI,CAAC,CAAAW,EAAA,GAAAJ,YAAY,CAACK,OAAO,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC,IAAIb,QAAQ,CAACK,cAAc;IAC/DH,MAAM,IAAI,CAAC,CAAAa,EAAA,GAAAN,YAAY,CAACO,KAAK,cAAAD,EAAA,cAAAA,EAAA,GAAI,CAAC,IAAIf,QAAQ,CAACI,YAAY;IAE3D,OAAO,IAAIJ,QAAQ,CAACE,MAAM,CAAC;EAC7B;;AA1CFe,OAAA,CAAAjB,QAAA,GAAAA,QAAA;AAGiBA,QAAA,CAAAM,cAAc,GAAG,IAAI;AACrBN,QAAA,CAAAK,cAAc,GAAGL,QAAQ,CAACM,cAAc,GAAG,EAAE;AAC7CN,QAAA,CAAAI,YAAY,GAAGJ,QAAQ,CAACK,cAAc,GAAG,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}