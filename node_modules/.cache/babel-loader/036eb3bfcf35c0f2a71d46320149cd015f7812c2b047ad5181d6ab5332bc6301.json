{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */function () {\n  function NoopTextMapPropagator() {}\n  /** Noop inject function does nothing */\n  NoopTextMapPropagator.prototype.inject = function (_context, _carrier) {};\n  /** Noop extract function does nothing and returns the input context */\n  NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n    return context;\n  };\n  NoopTextMapPropagator.prototype.fields = function () {\n    return [];\n  };\n  return NoopTextMapPropagator;\n}();\nexport { NoopTextMapPropagator };","map":{"version":3,"names":["NoopTextMapPropagator","prototype","inject","_context","_carrier","extract","context","fields"],"sources":["C:\\Users\\Ігор\\clone\\node_modules\\@opentelemetry\\api\\src\\propagation\\NoopTextMapPropagator.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { TextMapPropagator } from './TextMapPropagator';\n\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nexport class NoopTextMapPropagator implements TextMapPropagator {\n  /** Noop inject function does nothing */\n  inject(_context: Context, _carrier: unknown): void {}\n  /** Noop extract function does nothing and returns the input context */\n  extract(context: Context, _carrier: unknown): Context {\n    return context;\n  }\n  fields(): string[] {\n    return [];\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAmBA;;;AAGA,IAAAA,qBAAA;EAAA,SAAAA,sBAAA,GAUA;EATE;EACAA,qBAAA,CAAAC,SAAA,CAAAC,MAAM,GAAN,UAAOC,QAAiB,EAAEC,QAAiB,GAAS,CAAC;EACrD;EACAJ,qBAAA,CAAAC,SAAA,CAAAI,OAAO,GAAP,UAAQC,OAAgB,EAAEF,QAAiB;IACzC,OAAOE,OAAO;EAChB,CAAC;EACDN,qBAAA,CAAAC,SAAA,CAAAM,MAAM,GAAN;IACE,OAAO,EAAE;EACX,CAAC;EACH,OAAAP,qBAAC;AAAD,CAAC,CAVD"},"metadata":{},"sourceType":"module","externalDependencies":[]}