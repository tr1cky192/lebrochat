{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateMessageSize = void 0;\n/**\n * Precisely calculates the size of a message with optional `data` and\n * `attributes` fields. If a `data` field is present, its {@link Buffer#length}\n * member will be used. If `attributes` are present, each attribute's\n * key and value will be calculated for byte length.\n *\n * When the calculation is complete, the result will be stored in\n * `calculatedSize`. Since this calculation is generally only done\n * after the message has been handed off to this library, there shouldn't\n * be an issue with it being updated after the fact.\n *\n * This should not be used outside of this library. Its implementation\n * may change.\n *\n * @private\n */\nfunction calculateMessageSize(message) {\n  // If it's not a PubsubMessage, we'll augment it into one.\n  const msg = message;\n  if (msg.calculatedSize !== undefined) {\n    return msg.calculatedSize;\n  }\n  let size = 0;\n  if (msg.data) {\n    size += msg.data.length;\n  }\n  if (msg.attributes) {\n    const attrs = msg.attributes;\n    for (const key of Object.getOwnPropertyNames(attrs)) {\n      const val = attrs[key] || '';\n      size += Buffer.byteLength(key + val);\n    }\n  }\n  msg.calculatedSize = size;\n  return size;\n}\nexports.calculateMessageSize = calculateMessageSize;","map":{"version":3,"names":["calculateMessageSize","message","msg","calculatedSize","undefined","size","data","length","attributes","attrs","key","Object","getOwnPropertyNames","val","Buffer","byteLength","exports"],"sources":["../../../src/publisher/pubsub-message.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAuCA;;;;;;;;;;;;;;;;AAgBA,SAAgBA,oBAAoBA,CAClCC,OAAwD;EAExD;EACA,MAAMC,GAAG,GAAGD,OAAmC;EAE/C,IAAIC,GAAG,CAACC,cAAc,KAAKC,SAAS,EAAE;IACpC,OAAOF,GAAG,CAACC,cAAc;;EAG3B,IAAIE,IAAI,GAAG,CAAC;EAEZ,IAAIH,GAAG,CAACI,IAAI,EAAE;IACZD,IAAI,IAAIH,GAAG,CAACI,IAAI,CAACC,MAAM;;EAEzB,IAAIL,GAAG,CAACM,UAAU,EAAE;IAClB,MAAMC,KAAK,GAAGP,GAAG,CAACM,UAAU;IAC5B,KAAK,MAAME,GAAG,IAAIC,MAAM,CAACC,mBAAmB,CAACH,KAAK,CAAC,EAAE;MACnD,MAAMI,GAAG,GAAGJ,KAAK,CAACC,GAAG,CAAC,IAAI,EAAE;MAC5BL,IAAI,IAAIS,MAAM,CAACC,UAAU,CAACL,GAAG,GAAGG,GAAG,CAAC;;;EAIxCX,GAAG,CAACC,cAAc,GAAGE,IAAI;EACzB,OAAOA,IAAI;AACb;AAzBAW,OAAA,CAAAhB,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}