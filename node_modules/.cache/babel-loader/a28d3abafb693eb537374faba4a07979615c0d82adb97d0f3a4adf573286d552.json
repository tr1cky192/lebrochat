{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Topic = void 0;\nconst paginator_1 = require(\"@google-cloud/paginator\");\nconst iam_1 = require(\"./iam\");\nconst publisher_1 = require(\"./publisher\");\nconst flow_publisher_1 = require(\"./publisher/flow-publisher\");\nconst util_1 = require(\"./util\");\nconst snakeCase = require(\"lodash.snakecase\");\n/**\n * A Topic object allows you to interact with a Cloud Pub/Sub topic.\n *\n * @class\n * @param {PubSub} pubsub PubSub object.\n * @param {string} name Name of the topic.\n * @param {PublishOptions} [options] Publisher configuration object.\n *\n * @example\n * ```\n * const {PubSub} = require('@google-cloud/pubsub');\n * const pubsub = new PubSub();\n *\n * const topic = pubsub.topic('my-topic');\n *\n * ```\n * @example To enable message ordering, set `enableMessageOrdering` to true. Please note that this does not persist to an actual topic.\n * ```\n * const topic = pubsub.topic('ordered-topic', {enableMessageOrdering: true});\n * ```\n */\nclass Topic {\n  constructor(pubsub, name, options) {\n    this.getSubscriptionsStream = paginator_1.paginator.streamify('getSubscriptions');\n    /**\n     * The fully qualified name of this topic.\n     * @name Topic#name\n     * @type {string}\n     */\n    this.name = Topic.formatName_(pubsub.projectId, name);\n    this.publisher = new publisher_1.Publisher(this, options);\n    /**\n     * The parent {@link PubSub} instance of this topic instance.\n     * @name Topic#pubsub\n     * @type {PubSub}\n     */\n    /**\n     * The parent {@link PubSub} instance of this topic instance.\n     * @name Topic#parent\n     * @type {PubSub}\n     */\n    this.parent = this.pubsub = pubsub;\n    this.request = pubsub.request.bind(pubsub);\n    /**\n     * [IAM (Identity and Access\n     * Management)](https://cloud.google.com/pubsub/access_control) allows you\n     * to set permissions on individual resources and offers a wider range of\n     * roles: editor, owner, publisher, subscriber, and viewer. This gives you\n     * greater flexibility and allows you to set more fine-grained access\n     * control.\n     *\n     * *The IAM access control features described in this document are Beta,\n     * including the API methods to get and set IAM policies, and to test IAM\n     * permissions. Cloud Pub/Sub's use of IAM features is not covered by\n     * any SLA or deprecation policy, and may be subject to\n     * backward-incompatible changes.*\n     *\n     * @name Topic#iam\n     * @mixes IAM\n     *\n     * @see [Access Control Overview]{@link https://cloud.google.com/pubsub/access_control}\n     * @see [What is Cloud IAM?]{@link https://cloud.google.com/iam/}\n     *\n     * @example\n     * ```\n     * const {PubSub} = require('@google-cloud/pubsub');\n     * const pubsub = new PubSub();\n     *\n     * const topic = pubsub.topic('my-topic');\n     *\n     * //-\n     * // Get the IAM policy for your topic.\n     * //-\n     * topic.iam.getPolicy((err, policy) => {\n     *   console.log(policy);\n     * });\n     *\n     * //-\n     * // If the callback is omitted, we'll return a Promise.\n     * //-\n     * topic.iam.getPolicy().then((data) => {\n     *   const policy = data[0];\n     *   const apiResponse = data[1];\n     * });\n     * ```\n     */\n    this.iam = new iam_1.IAM(pubsub, this.name);\n  }\n  flush(callback) {\n    // It doesn't matter here if callback is undefined; the Publisher\n    // flush() will handle it.\n    this.publisher.flush(callback);\n  }\n  create(optsOrCallback, callback) {\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    this.pubsub.createTopic(this.name, gaxOpts, callback);\n  }\n  createSubscription(name, optsOrCallback, callback) {\n    const options = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    this.pubsub.createSubscription(this, name, options, callback);\n  }\n  delete(optsOrCallback, callback) {\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const reqOpts = {\n      topic: this.name\n    };\n    this.request({\n      client: 'PublisherClient',\n      method: 'deleteTopic',\n      reqOpts,\n      gaxOpts: gaxOpts\n    }, callback);\n  }\n  exists(callback) {\n    this.getMetadata(err => {\n      if (!err) {\n        callback(null, true);\n        return;\n      }\n      if (err.code === 5) {\n        callback(null, false);\n        return;\n      }\n      callback(err);\n    });\n  }\n  get(optsOrCallback, callback) {\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const autoCreate = !!gaxOpts.autoCreate;\n    delete gaxOpts.autoCreate;\n    this.getMetadata(gaxOpts, (err, apiResponse) => {\n      if (!err) {\n        callback(null, this, apiResponse);\n        return;\n      }\n      if (err.code !== 5 || !autoCreate) {\n        callback(err, null, apiResponse);\n        return;\n      }\n      this.create(gaxOpts, callback);\n    });\n  }\n  getMetadata(optsOrCallback, callback) {\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const reqOpts = {\n      topic: this.name\n    };\n    this.request({\n      client: 'PublisherClient',\n      method: 'getTopic',\n      reqOpts,\n      gaxOpts: gaxOpts\n    }, (err, apiResponse) => {\n      if (!err) {\n        this.metadata = apiResponse;\n      }\n      callback(err, apiResponse);\n    });\n  }\n  getSubscriptions(optsOrCallback, callback) {\n    const options = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const reqOpts = Object.assign({\n      topic: this.name\n    }, options);\n    delete reqOpts.gaxOpts;\n    delete reqOpts.autoPaginate;\n    const gaxOpts = Object.assign({\n      autoPaginate: options.autoPaginate\n    }, options.gaxOpts);\n    this.request({\n      client: 'PublisherClient',\n      method: 'listTopicSubscriptions',\n      reqOpts,\n      gaxOpts\n    }, (err, subNames, ...args) => {\n      let subscriptions;\n      if (subNames) {\n        subscriptions = subNames.map(sub => this.subscription(sub));\n      }\n      callback(err, subscriptions, ...args);\n    });\n  }\n  publish(data, attrsOrCb, callback) {\n    const attributes = typeof attrsOrCb === 'object' ? attrsOrCb : {};\n    callback = typeof attrsOrCb === 'function' ? attrsOrCb : callback;\n    return this.publishMessage({\n      data,\n      attributes\n    }, callback);\n  }\n  publishJSON(json, attrsOrCb, callback) {\n    if (!json || typeof json !== 'object') {\n      throw new Error('First parameter should be an object.');\n    }\n    const attributes = typeof attrsOrCb === 'object' ? attrsOrCb : {};\n    callback = typeof attrsOrCb === 'function' ? attrsOrCb : callback;\n    return this.publishMessage({\n      json,\n      attributes\n    }, callback);\n  }\n  publishMessage(message, callback) {\n    // Make a copy to ensure that any changes we make to it will not\n    // propagate up to the user's data.\n    message = Object.assign({}, message);\n    if (message.json && typeof message.json === 'object') {\n      message.data = Buffer.from(JSON.stringify(message.json));\n      delete message.json;\n    }\n    return this.publisher.publishMessage(message, callback);\n  }\n  /**\n   * Creates a FlowControlledPublisher for this Topic.\n   *\n   * FlowControlledPublisher is a helper that lets you control how many messages\n   * are simultaneously queued to send, to avoid ballooning memory usage on\n   * a low bandwidth connection to Pub/Sub.\n   *\n   * Note that it's perfectly fine to create more than one on the same Topic.\n   * The actual flow control settings on the Topic will apply across all\n   * FlowControlledPublisher objects on that Topic.\n   *\n   * @returns {FlowControlledPublisher} The flow control helper.\n   */\n  flowControlled() {\n    return new flow_publisher_1.FlowControlledPublisher(this.publisher);\n  }\n  /**\n   * In the event that the client fails to publish an ordered message, all\n   * subsequent publish calls using the same ordering key will fail. Calling\n   * this method will disregard the publish failure, allowing the supplied\n   * ordering key to be used again in the future.\n   *\n   * @param {string} orderingKey The ordering key in question.\n   *\n   * @example\n   * ```\n   * const {PubSub} = require('@google-cloud/pubsub');\n   * const pubsub = new PubSub();\n   * const topic = pubsub.topic('my-topic', {messageOrdering: true});\n   *\n   * const orderingKey = 'foo';\n   * const data = Buffer.from('Hello, order!');\n   *\n   * topic.publishMessage({data, orderingKey}, err => {\n   *   if (err) {\n   *     topic.resumePublishing(orderingKey);\n   *   }\n   * });\n   * ```\n   */\n  resumePublishing(orderingKey) {\n    this.publisher.resumePublishing(orderingKey);\n  }\n  setMetadata(options, optsOrCallback, callback) {\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const topic = Object.assign({\n      name: this.name\n    }, options);\n    const updateMask = {\n      paths: Object.keys(options).map(snakeCase)\n    };\n    const reqOpts = {\n      topic,\n      updateMask\n    };\n    this.request({\n      client: 'PublisherClient',\n      method: 'updateTopic',\n      reqOpts,\n      gaxOpts\n    }, callback);\n  }\n  /**\n   * Set the publisher options.\n   *\n   * @param {PublishOptions} options The publisher options.\n   *\n   * @example\n   * ```\n   * const {PubSub} = require('@google-cloud/pubsub');\n   * const pubsub = new PubSub();\n   *\n   * const topic = pubsub.topic('my-topic');\n   *\n   * topic.setPublishOptions({\n   *   batching: {\n   *     maxMilliseconds: 10\n   *   }\n   * });\n   * ```\n   */\n  setPublishOptions(options) {\n    this.publisher.setOptions(options);\n  }\n  /**\n   * Get the default publisher options. These may be modified and passed\n   * back into {@link Topic#setPublishOptions}.\n   *\n   * @example\n   * ```\n   * const {PubSub} = require('@google-cloud/pubsub');\n   * const pubsub = new PubSub();\n   *\n   * const topic = pubsub.topic('my-topic');\n   *\n   * const defaults = topic.getPublishOptionDefaults();\n   * defaults.batching.maxMilliseconds = 10;\n   * topic.setPublishOptions(defaults);\n   * ```\n   */\n  getPublishOptionDefaults() {\n    // Generally I'd leave this as a static, but it'll be easier for users to\n    // get at when they're using the veneer objects.\n    return this.publisher.getOptionDefaults();\n  }\n  /**\n   * Create a Subscription object. This command by itself will not run any API\n   * requests. You will receive a {module:pubsub/subscription} object,\n   * which will allow you to interact with a subscription.\n   *\n   * @throws {Error} If subscription name is omitted.\n   *\n   * @param {string} name Name of the subscription.\n   * @param {SubscriberOptions} [options] Configuration object.\n   * @return {Subscription}\n   *\n   * @example\n   * ```\n   * const {PubSub} = require('@google-cloud/pubsub');\n   * const pubsub = new PubSub();\n   *\n   * const topic = pubsub.topic('my-topic');\n   * const subscription = topic.subscription('my-subscription');\n   *\n   * // Register a listener for `message` events.\n   * subscription.on('message', (message) => {\n   *   // Called every time a message is received.\n   *   // message.id = ID of the message.\n   *   // message.ackId = ID used to acknowledge the message receival.\n   *   // message.data = Contents of the message.\n   *   // message.attributes = Attributes of the message.\n   *   // message.publishTime = Timestamp when Pub/Sub received the message.\n   * });\n   * ```\n   */\n  subscription(name, options) {\n    options = options || {};\n    options.topic = this;\n    return this.pubsub.subscription(name, options);\n  }\n  /**\n   * Format the name of a topic. A Topic's full name is in the format of\n   * 'projects/{projectId}/topics/{topicName}'.\n   *\n   * @private\n   *\n   * @return {string}\n   */\n  static formatName_(projectId, name) {\n    // Simple check if the name is already formatted.\n    if (name.indexOf('/') > -1) {\n      return name;\n    }\n    return 'projects/' + projectId + '/topics/' + name;\n  }\n}\nexports.Topic = Topic;\n/**\n * Get a list of the {module:pubsub/subscription} objects registered to this\n * topic as a readable object stream.\n *\n * @method PubSub#getSubscriptionsStream\n * @param {GetSubscriptionsRequest} [options] Configuration object. See\n *     {@link PubSub#getSubscriptions} for a complete list of options.\n * @returns {ReadableStream} A readable stream of {@link Subscription} instances.\n *\n * @example\n * ```\n * const {PubSub} = require('@google-cloud/pubsub');\n * const pubsub = new PubSub();\n *\n * const topic = pubsub.topic('my-topic');\n *\n * topic.getSubscriptionsStream()\n *   .on('error', console.error)\n *   .on('data', (subscription) => {\n *     // subscription is a Subscription object.\n *   })\n *   .on('end', () => {\n *     // All subscriptions retrieved.\n *   });\n *\n * //-\n * // If you anticipate many results, you can end a stream early to prevent\n * // unnecessary processing and API requests.\n * //-\n * topic.getSubscriptionsStream()\n *   .on('data', function(subscription) {\n *     this.end();\n *   });\n * ```\n */\n/*! Developer Documentation\n *\n * These methods can be agto-paginated.\n */\npaginator_1.paginator.extend(Topic, ['getSubscriptions']);\n/*! Developer Documentation\n *\n * Existing async methods (except for streams) will return a Promise in the event\n * that a callback is omitted. Future methods will not allow for a callback.\n * (Use .then() on the returned Promise instead.)\n */\n(0, util_1.promisifySome)(Topic, Topic.prototype, ['flush', 'create', 'createSubscription', 'delete', 'exists', 'get', 'getMetadata', 'getSubscriptions', 'setMetadata']);","map":{"version":3,"names":["paginator_1","require","iam_1","publisher_1","flow_publisher_1","util_1","snakeCase","Topic","constructor","pubsub","name","options","getSubscriptionsStream","paginator","streamify","formatName_","projectId","publisher","Publisher","parent","request","bind","iam","IAM","flush","callback","create","optsOrCallback","gaxOpts","createTopic","createSubscription","delete","reqOpts","topic","client","method","exists","getMetadata","err","code","get","autoCreate","apiResponse","metadata","getSubscriptions","Object","assign","autoPaginate","subNames","args","subscriptions","map","sub","subscription","publish","data","attrsOrCb","attributes","publishMessage","publishJSON","json","Error","message","Buffer","from","JSON","stringify","flowControlled","FlowControlledPublisher","resumePublishing","orderingKey","setMetadata","updateMask","paths","keys","setPublishOptions","setOptions","getPublishOptionDefaults","getOptionDefaults","indexOf","exports","extend","promisifySome","prototype"],"sources":["../../src/topic.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}