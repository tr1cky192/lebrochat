{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlowControlledPublisher = void 0;\nconst pubsub_message_1 = require(\"./pubsub-message\");\n/**\n * Encapsulates a series of message publishes from a rapid loop (or similar\n * circumstance).\n *\n * This class is not meant to be instantiated outside of the `@google-cloud/pubsub`\n * package. It is returned from {@link Topic#flowControlled}. Messages sent\n * through an instance of this class will obey publisher flow control\n * settings set through {@link PublisherOptions} on {@link Topic}, across\n * all instances returned by {@link Topic#flowControlled} on that {@link Topic}.\n */\nclass FlowControlledPublisher {\n  constructor(publisher) {\n    this.publisher = publisher;\n    this.flowControl = this.publisher.flowControl;\n    this.idPromises = [];\n  }\n  /**\n   * Returns true if sending the specified Buffer would result in exceeding the\n   * limits of the flow control settings.\n   *\n   * @param {PubsubMessage} message The data buffer with the message's contents.\n   * @returns {boolean} True if the message would exceed flow control limits.\n   */\n  wouldExceed(message) {\n    return this.flowControl.wouldExceed((0, pubsub_message_1.calculateMessageSize)(message), 1);\n  }\n  /**\n   * Publishes a message, subject to flow control restrictions.\n   *\n   * If the message can be sent immediately, this will return `null`. Otherwise,\n   * it will return a Promise<void> that resolves after it's okay to resume\n   * calling the method.\n   *\n   * @param {Buffer} [data] The message contents to be sent.\n   * @param {Attributes} [attributes] Optional attributes.\n   * @returns null, or a Promise that resolves when sending may resume.\n   *\n   * @example\n   * ```\n   * const wait = flowControlled.publish({data});\n   * if (wait) {\n   *   await wait;\n   * }\n   *\n   * ```\n   * @example\n   * ```\n   * // It's okay to await unconditionally, it's equivalent to nextTick().\n   * await flowControlled.publish(data);\n   * ```\n   */\n  publish(message) {\n    const doPublish = () => {\n      this.doPublish(message);\n    };\n    const size = (0, pubsub_message_1.calculateMessageSize)(message);\n    if (this.flowControl.wouldExceed(size, 1)) {\n      const waitPromise = this.flowControl.willSend(size, 1);\n      return waitPromise.then(doPublish);\n    } else {\n      this.flowControl.willSend(size, 1).then(() => {});\n      doPublish();\n      return null;\n    }\n  }\n  /**\n   * Publishes a message unconditionally, updating flow control counters.\n   *\n   * You'll generally only want to use this if you want to deal with timing the\n   * flow control yourself, but you'd like the library to do the bean counting.\n   *\n   * @param {Buffer} [data] The message contents to be sent.\n   * @param {Attributes} [attributes] Optional attributes.\n   *\n   * @example\n   * ```\n   * if (!flowControlled.wouldExceed(data)) {\n   *   flowControlled.publishNow(data);\n   * }\n   * ```\n   */\n  publishNow(message) {\n    this.flowControl.addToCount((0, pubsub_message_1.calculateMessageSize)(message), 1);\n    this.doPublish(message);\n  }\n  doPublish(message) {\n    let idPromise = this.publisher.publishMessage(message);\n    // This will defer but not eat any errors.\n    const publishDone = id => {\n      this.flowControl.sent((0, pubsub_message_1.calculateMessageSize)(message), 1);\n      return id;\n    };\n    idPromise.catch(publishDone);\n    idPromise = idPromise.then(publishDone);\n    this.idPromises.push(idPromise);\n  }\n  /**\n   * Returns a Promise that will resolve to all of the currently sent\n   * message IDs (or reject if there is an error). This also clears\n   * out any currently sent messages, so the next call to `all()` will\n   * be a clean slate.\n   *\n   * @returns {Promise<string[]>} A Promise that resolves when all current\n   *   messages are sent.\n   */\n  all() {\n    const allPromise = Promise.all(this.idPromises);\n    this.idPromises = [];\n    return allPromise;\n  }\n}\nexports.FlowControlledPublisher = FlowControlledPublisher;","map":{"version":3,"names":["pubsub_message_1","require","FlowControlledPublisher","constructor","publisher","flowControl","idPromises","wouldExceed","message","calculateMessageSize","publish","doPublish","size","waitPromise","willSend","then","publishNow","addToCount","idPromise","publishMessage","publishDone","id","sent","catch","push","all","allPromise","Promise","exports"],"sources":["../../../src/publisher/flow-publisher.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,gBAAA,GAAAC,OAAA;AAEA;;;;;;;;;;AAUA,MAAaC,uBAAuB;EAKlCC,YAAYC,SAAoB;IAC9B,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACD,SAAS,CAACC,WAAW;IAC7C,IAAI,CAACC,UAAU,GAAG,EAAE;EACtB;EAEA;;;;;;;EAOAC,WAAWA,CAACC,OAAsB;IAChC,OAAO,IAAI,CAACH,WAAW,CAACE,WAAW,CAAC,IAAAP,gBAAA,CAAAS,oBAAoB,EAACD,OAAO,CAAC,EAAE,CAAC,CAAC;EACvE;EAEA;;;;;;;;;;;;;;;;;;;;;;;;;EAyBAE,OAAOA,CAACF,OAAsB;IAC5B,MAAMG,SAAS,GAAGA,CAAA,KAAK;MACrB,IAAI,CAACA,SAAS,CAACH,OAAO,CAAC;IACzB,CAAC;IAED,MAAMI,IAAI,GAAG,IAAAZ,gBAAA,CAAAS,oBAAoB,EAACD,OAAO,CAAC;IAC1C,IAAI,IAAI,CAACH,WAAW,CAACE,WAAW,CAACK,IAAI,EAAE,CAAC,CAAC,EAAE;MACzC,MAAMC,WAAW,GAAG,IAAI,CAACR,WAAW,CAACS,QAAQ,CAACF,IAAI,EAAE,CAAC,CAAC;MACtD,OAAOC,WAAW,CAACE,IAAI,CAACJ,SAAS,CAAC;KACnC,MAAM;MACL,IAAI,CAACN,WAAW,CAACS,QAAQ,CAACF,IAAI,EAAE,CAAC,CAAC,CAACG,IAAI,CAAC,MAAK,CAAE,CAAC,CAAC;MACjDJ,SAAS,EAAE;MACX,OAAO,IAAI;;EAEf;EAEA;;;;;;;;;;;;;;;;EAgBAK,UAAUA,CAACR,OAAsB;IAC/B,IAAI,CAACH,WAAW,CAACY,UAAU,CAAC,IAAAjB,gBAAA,CAAAS,oBAAoB,EAACD,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7D,IAAI,CAACG,SAAS,CAACH,OAAO,CAAC;EACzB;EAEQG,SAASA,CAACH,OAAsB;IACtC,IAAIU,SAAS,GAAG,IAAI,CAACd,SAAS,CAACe,cAAc,CAACX,OAAO,CAAC;IAEtD;IACA,MAAMY,WAAW,GAAIC,EAAU,IAAI;MACjC,IAAI,CAAChB,WAAW,CAACiB,IAAI,CAAC,IAAAtB,gBAAA,CAAAS,oBAAoB,EAACD,OAAO,CAAC,EAAE,CAAC,CAAC;MACvD,OAAOa,EAAE;IACX,CAAC;IACDH,SAAS,CAACK,KAAK,CAACH,WAAW,CAAC;IAC5BF,SAAS,GAAGA,SAAS,CAACH,IAAI,CAACK,WAAW,CAAC;IAEvC,IAAI,CAACd,UAAU,CAACkB,IAAI,CAACN,SAAS,CAAC;EACjC;EAEA;;;;;;;;;EASAO,GAAGA,CAAA;IACD,MAAMC,UAAU,GAAGC,OAAO,CAACF,GAAG,CAAC,IAAI,CAACnB,UAAU,CAAC;IAC/C,IAAI,CAACA,UAAU,GAAG,EAAE;IACpB,OAAOoB,UAAU;EACnB;;AA/GFE,OAAA,CAAA1B,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}