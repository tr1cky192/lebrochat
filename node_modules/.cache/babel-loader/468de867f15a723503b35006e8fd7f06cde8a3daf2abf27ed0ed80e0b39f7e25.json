{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IAM = void 0;\n/*!\n * @module pubsub/iam\n */\nconst arrify = require(\"arrify\");\nconst util_1 = require(\"./util\");\n/**\n * [IAM (Identity and Access\n * Management)](https://cloud.google.com/pubsub/access_control) allows you to\n * set permissions on individual resources and offers a wider range of roles:\n * editor, owner, publisher, subscriber, and viewer. This gives you greater\n * flexibility and allows you to set more fine-grained access control.\n *\n * For example:\n *   * Grant access on a per-topic or per-subscription basis, rather than for\n *     the whole Cloud project.\n *   * Grant access with limited capabilities, such as to only publish messages\n *     to a topic, or to only to consume messages from a subscription, but not\n *     to delete the topic or subscription.\n *\n *\n * *The IAM access control features described in this document are Beta,\n * including the API methods to get and set IAM policies, and to test IAM\n * permissions. Cloud Pub/Sub's use of IAM features is not covered by any\n * SLA or deprecation policy, and may be subject to backward-incompatible\n * changes.*\n *\n * @class\n * @param {PubSub} pubsub PubSub Object.\n * @param {string} id The name of the topic or subscription.\n *\n * @see [Access Control Overview]{@link https://cloud.google.com/pubsub/access_control}\n * @see [What is Cloud IAM?]{@link https://cloud.google.com/iam/}\n *\n * @example\n * ```\n * const {PubSub} = require('@google-cloud/pubsub');\n * const pubsub = new PubSub();\n *\n * const topic = pubsub.topic('my-topic');\n * // topic.iam\n *\n * const subscription = pubsub.subscription('my-subscription');\n * // subscription.iam\n * ```\n */\nclass IAM {\n  constructor(pubsub, id) {\n    this.pubsub = pubsub;\n    this.request = pubsub.request.bind(pubsub);\n    this.id = id;\n  }\n  getPolicy(optsOrCallback, callback) {\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const reqOpts = {\n      resource: this.id\n    };\n    this.request({\n      client: 'SubscriberClient',\n      method: 'getIamPolicy',\n      reqOpts,\n      gaxOpts\n    }, callback);\n  }\n  setPolicy(policy, optsOrCallback, callback) {\n    if (!(typeof policy === 'object')) {\n      throw new Error('A policy object is required.');\n    }\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const reqOpts = {\n      resource: this.id,\n      policy\n    };\n    this.request({\n      client: 'SubscriberClient',\n      method: 'setIamPolicy',\n      reqOpts,\n      gaxOpts\n    }, callback);\n  }\n  testPermissions(permissions, optsOrCallback, callback) {\n    if (!Array.isArray(permissions) && !(typeof permissions === 'string')) {\n      throw new Error('Permissions are required.');\n    }\n    const gaxOpts = typeof optsOrCallback === 'object' ? optsOrCallback : {};\n    callback = typeof optsOrCallback === 'function' ? optsOrCallback : callback;\n    const reqOpts = {\n      resource: this.id,\n      permissions: arrify(permissions)\n    };\n    this.request({\n      client: 'SubscriberClient',\n      method: 'testIamPermissions',\n      reqOpts,\n      gaxOpts\n    }, (err, resp) => {\n      if (err) {\n        callback(err, null, resp);\n        return;\n      }\n      const availablePermissions = arrify(resp.permissions);\n      const permissionHash = permissions.reduce((acc, permission) => {\n        acc[permission] = availablePermissions.indexOf(permission) > -1;\n        return acc;\n      }, {});\n      callback(null, permissionHash, resp);\n    });\n  }\n}\nexports.IAM = IAM;\n/*! Developer Documentation\n *\n * Existing async methods (except for streams) will return a Promise in the event\n * that a callback is omitted. Future methods will not allow for a callback.\n * (Use .then() on the returned Promise instead.)\n */\n(0, util_1.promisifySome)(IAM, IAM.prototype, ['getPolicy', 'setPolicy', 'testPermissions']);","map":{"version":3,"names":["arrify","require","util_1","IAM","constructor","pubsub","id","request","bind","getPolicy","optsOrCallback","callback","gaxOpts","reqOpts","resource","client","method","setPolicy","policy","Error","testPermissions","permissions","Array","isArray","err","resp","availablePermissions","permissionHash","reduce","acc","permission","indexOf","exports","promisifySome","prototype"],"sources":["../../src/iam.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}