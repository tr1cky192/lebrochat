{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultOptions = void 0;\nconst temporal_1 = require(\"./temporal\");\n// These options will be used library-wide. They're specified here so that\n// they can be changed easily in the future.\nexports.defaultOptions = {\n  subscription: {\n    // The maximum number of messages that may be queued for receiving,\n    // with the default lease manager.\n    maxOutstandingMessages: 1000,\n    // The maximum amount of message data that may be queued for receiving,\n    // in bytes, with the default lease manager.\n    maxOutstandingBytes: 100 * 1024 * 1024,\n    // The minimum length of time a message's lease will be extended by.\n    minAckDeadline: undefined,\n    // The maximum length of time a message's lease will be extended by.\n    maxAckDeadline: temporal_1.Duration.from({\n      minutes: 10\n    }),\n    // The maximum number of minutes that a message's lease will ever\n    // be extended.\n    maxExtensionMinutes: 60,\n    // The maximum number of subscription streams/threads that will ever\n    // be opened.\n    maxStreams: 5,\n    // The starting number of seconds that ack deadlines will be extended.\n    ackDeadline: 10\n  },\n  publish: {\n    // The maximum number of messages we'll batch up for publish().\n    maxOutstandingMessages: 100,\n    // The maximum size of the total batched up messages for publish().\n    maxOutstandingBytes: 1 * 1024 * 1024,\n    // The maximum time we'll wait to send batched messages, in milliseconds.\n    maxDelayMillis: 10\n  }\n};","map":{"version":3,"names":["temporal_1","require","exports","defaultOptions","subscription","maxOutstandingMessages","maxOutstandingBytes","minAckDeadline","undefined","maxAckDeadline","Duration","from","minutes","maxExtensionMinutes","maxStreams","ackDeadline","publish","maxDelayMillis"],"sources":["../../src/default-options.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA,MAAAA,UAAA,GAAAC,OAAA;AAEA;AACA;AACaC,OAAA,CAAAC,cAAc,GAAG;EAC5BC,YAAY,EAAE;IACZ;IACA;IACAC,sBAAsB,EAAE,IAAI;IAE5B;IACA;IACAC,mBAAmB,EAAE,GAAG,GAAG,IAAI,GAAG,IAAI;IAEtC;IACAC,cAAc,EAAEC,SAAS;IAEzB;IACAC,cAAc,EAAET,UAAA,CAAAU,QAAQ,CAACC,IAAI,CAAC;MAACC,OAAO,EAAE;IAAE,CAAC,CAAC;IAE5C;IACA;IACAC,mBAAmB,EAAE,EAAE;IAEvB;IACA;IACAC,UAAU,EAAE,CAAC;IAEb;IACAC,WAAW,EAAE;GACd;EAEDC,OAAO,EAAE;IACP;IACAX,sBAAsB,EAAE,GAAG;IAE3B;IACAC,mBAAmB,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;IAEpC;IACAW,cAAc,EAAE;;CAEnB"},"metadata":{},"sourceType":"script","externalDependencies":[]}