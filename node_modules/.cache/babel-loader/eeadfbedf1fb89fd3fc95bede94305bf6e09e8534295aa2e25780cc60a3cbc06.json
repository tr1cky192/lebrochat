{"ast":null,"code":"\"use strict\";\n\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SchemaServiceClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/schema_service_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./schema_service_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service for doing schema-related operations.\n * @class\n * @memberof v1\n */\nclass SchemaServiceClient {\n  /**\n   * Construct an instance of SchemaServiceClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new SchemaServiceClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || staticMembers.servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_a = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _a !== void 0 ? _a : {};\n    const fallback = (_b = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _b !== void 0 ? _b : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = staticMembers.servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === staticMembers.servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process !== 'undefined' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n      projectTopicPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/topics/{topic}'),\n      schemaPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/schemas/{schema}'),\n      snapshotPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/snapshots/{snapshot}'),\n      subscriptionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/subscriptions/{subscription}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listSchemas: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'schemas'),\n      listSchemaRevisions: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'schemas')\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.pubsub.v1.SchemaService', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.schemaServiceStub) {\n      return this.schemaServiceStub;\n    }\n    // Put together the \"service stub\" for\n    // google.pubsub.v1.SchemaService.\n    this.schemaServiceStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.pubsub.v1.SchemaService') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.pubsub.v1.SchemaService, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const schemaServiceStubMethods = ['createSchema', 'getSchema', 'listSchemas', 'listSchemaRevisions', 'commitSchema', 'rollbackSchema', 'deleteSchemaRevision', 'deleteSchema', 'validateSchema', 'validateMessage'];\n    for (const methodName of schemaServiceStubMethods) {\n      const callPromise = this.schemaServiceStub.then(stub => (...args) => {\n        if (this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.schemaServiceStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    return 'pubsub.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath(),\n   * exists for compatibility reasons.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    return 'pubsub.googleapis.com';\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/pubsub'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  createSchema(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createSchema(request, options, callback);\n  }\n  getSchema(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getSchema(request, options, callback);\n  }\n  commitSchema(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.commitSchema(request, options, callback);\n  }\n  rollbackSchema(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.rollbackSchema(request, options, callback);\n  }\n  deleteSchemaRevision(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteSchemaRevision(request, options, callback);\n  }\n  deleteSchema(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteSchema(request, options, callback);\n  }\n  validateSchema(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.validateSchema(request, options, callback);\n  }\n  validateMessage(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.validateMessage(request, options, callback);\n  }\n  listSchemas(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listSchemas(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The name of the project in which to list schemas.\n   *   Format is `projects/{project-id}`.\n   * @param {google.pubsub.v1.SchemaView} request.view\n   *   The set of Schema fields to return in the response. If not set, returns\n   *   Schemas with `name` and `type`, but not `definition`. Set to `FULL` to\n   *   retrieve all fields.\n   * @param {number} request.pageSize\n   *   Maximum number of schemas to return.\n   * @param {string} request.pageToken\n   *   The value returned by the last `ListSchemasResponse`; indicates that\n   *   this is a continuation of a prior `ListSchemas` call, and that the\n   *   system should return the next page of data.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link google.pubsub.v1.Schema | Schema} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listSchemasAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSchemasStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSchemas'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSchemas.createStream(this.innerApiCalls.listSchemas, request, callSettings);\n  }\n  /**\n   * Equivalent to `listSchemas`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The name of the project in which to list schemas.\n   *   Format is `projects/{project-id}`.\n   * @param {google.pubsub.v1.SchemaView} request.view\n   *   The set of Schema fields to return in the response. If not set, returns\n   *   Schemas with `name` and `type`, but not `definition`. Set to `FULL` to\n   *   retrieve all fields.\n   * @param {number} request.pageSize\n   *   Maximum number of schemas to return.\n   * @param {string} request.pageToken\n   *   The value returned by the last `ListSchemasResponse`; indicates that\n   *   this is a continuation of a prior `ListSchemas` call, and that the\n   *   system should return the next page of data.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link google.pubsub.v1.Schema | Schema}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSchemasAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSchemas'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSchemas.asyncIterate(this.innerApiCalls['listSchemas'], request, callSettings);\n  }\n  listSchemaRevisions(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listSchemaRevisions(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Required. The name of the schema to list revisions for.\n   * @param {google.pubsub.v1.SchemaView} request.view\n   *   The set of Schema fields to return in the response. If not set, returns\n   *   Schemas with `name` and `type`, but not `definition`. Set to `FULL` to\n   *   retrieve all fields.\n   * @param {number} request.pageSize\n   *   The maximum number of revisions to return per page.\n   * @param {string} request.pageToken\n   *   The page token, received from a previous ListSchemaRevisions call.\n   *   Provide this to retrieve the subsequent page.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link google.pubsub.v1.Schema | Schema} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listSchemaRevisionsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSchemaRevisionsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSchemaRevisions'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSchemaRevisions.createStream(this.innerApiCalls.listSchemaRevisions, request, callSettings);\n  }\n  /**\n   * Equivalent to `listSchemaRevisions`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Required. The name of the schema to list revisions for.\n   * @param {google.pubsub.v1.SchemaView} request.view\n   *   The set of Schema fields to return in the response. If not set, returns\n   *   Schemas with `name` and `type`, but not `definition`. Set to `FULL` to\n   *   retrieve all fields.\n   * @param {number} request.pageSize\n   *   The maximum number of revisions to return per page.\n   * @param {string} request.pageToken\n   *   The page token, received from a previous ListSchemaRevisions call.\n   *   Provide this to retrieve the subsequent page.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link google.pubsub.v1.Schema | Schema}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)\n   *   for more details and examples.\n   */\n  listSchemaRevisionsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listSchemaRevisions'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listSchemaRevisions.asyncIterate(this.innerApiCalls['listSchemaRevisions'], request, callSettings);\n  }\n  /**\n   * Gets the access control policy for a resource. Returns an empty policy\n   * if the resource exists and does not have a policy set.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.resource\n   *   REQUIRED: The resource for which the policy is being requested.\n   *   See the operation documentation for the appropriate value for this field.\n   * @param {Object} [request.options]\n   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to\n   *   `GetIamPolicy`. This field is only used by Cloud IAM.\n   *\n   *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.\n   * @param {Object} [options]\n   *   Optional parameters. You can override the default settings for this call, e.g, timeout,\n   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.\n   * @param {function(?Error, ?Object)} [callback]\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API call.\n   */\n  getIamPolicy(request, options, callback) {\n    return this.iamClient.getIamPolicy(request, options, callback);\n  }\n  /**\n   * Returns permissions that a caller has on the specified resource. If the\n   * resource does not exist, this will return an empty set of\n   * permissions, not a NOT_FOUND error.\n   *\n   * Note: This operation is designed to be used for building\n   * permission-aware UIs and command-line tools, not for authorization\n   * checking. This operation may \"fail open\" without warning.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.resource\n   *   REQUIRED: The resource for which the policy detail is being requested.\n   *   See the operation documentation for the appropriate value for this field.\n   * @param {string[]} request.permissions\n   *   The set of permissions to check for the `resource`. Permissions with\n   *   wildcards (such as '*' or 'storage.*') are not allowed. For more\n   *   information see\n   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n   * @param {Object} [options]\n   *   Optional parameters. You can override the default settings for this call, e.g, timeout,\n   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.\n   * @param {function(?Error, ?Object)} [callback]\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API call.\n   */\n  setIamPolicy(request, options, callback) {\n    return this.iamClient.setIamPolicy(request, options, callback);\n  }\n  /**\n   * Returns permissions that a caller has on the specified resource. If the\n   * resource does not exist, this will return an empty set of\n   * permissions, not a NOT_FOUND error.\n   *\n   * Note: This operation is designed to be used for building\n   * permission-aware UIs and command-line tools, not for authorization\n   * checking. This operation may \"fail open\" without warning.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.resource\n   *   REQUIRED: The resource for which the policy detail is being requested.\n   *   See the operation documentation for the appropriate value for this field.\n   * @param {string[]} request.permissions\n   *   The set of permissions to check for the `resource`. Permissions with\n   *   wildcards (such as '*' or 'storage.*') are not allowed. For more\n   *   information see\n   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n   * @param {Object} [options]\n   *   Optional parameters. You can override the default settings for this call, e.g, timeout,\n   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.\n   * @param {function(?Error, ?Object)} [callback]\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API call.\n   *\n   */\n  testIamPermissions(request, options, callback) {\n    return this.iamClient.testIamPermissions(request, options, callback);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified project resource name string.\n   *\n   * @param {string} project\n   * @returns {string} Resource name string.\n   */\n  projectPath(project) {\n    return this.pathTemplates.projectPathTemplate.render({\n      project: project\n    });\n  }\n  /**\n   * Parse the project from Project resource.\n   *\n   * @param {string} projectName\n   *   A fully-qualified path representing Project resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectName(projectName) {\n    return this.pathTemplates.projectPathTemplate.match(projectName).project;\n  }\n  /**\n   * Return a fully-qualified projectTopic resource name string.\n   *\n   * @param {string} project\n   * @param {string} topic\n   * @returns {string} Resource name string.\n   */\n  projectTopicPath(project, topic) {\n    return this.pathTemplates.projectTopicPathTemplate.render({\n      project: project,\n      topic: topic\n    });\n  }\n  /**\n   * Parse the project from ProjectTopic resource.\n   *\n   * @param {string} projectTopicName\n   *   A fully-qualified path representing project_topic resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectTopicName(projectTopicName) {\n    return this.pathTemplates.projectTopicPathTemplate.match(projectTopicName).project;\n  }\n  /**\n   * Parse the topic from ProjectTopic resource.\n   *\n   * @param {string} projectTopicName\n   *   A fully-qualified path representing project_topic resource.\n   * @returns {string} A string representing the topic.\n   */\n  matchTopicFromProjectTopicName(projectTopicName) {\n    return this.pathTemplates.projectTopicPathTemplate.match(projectTopicName).topic;\n  }\n  /**\n   * Return a fully-qualified schema resource name string.\n   *\n   * @param {string} project\n   * @param {string} schema\n   * @returns {string} Resource name string.\n   */\n  schemaPath(project, schema) {\n    return this.pathTemplates.schemaPathTemplate.render({\n      project: project,\n      schema: schema\n    });\n  }\n  /**\n   * Parse the project from Schema resource.\n   *\n   * @param {string} schemaName\n   *   A fully-qualified path representing Schema resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromSchemaName(schemaName) {\n    return this.pathTemplates.schemaPathTemplate.match(schemaName).project;\n  }\n  /**\n   * Parse the schema from Schema resource.\n   *\n   * @param {string} schemaName\n   *   A fully-qualified path representing Schema resource.\n   * @returns {string} A string representing the schema.\n   */\n  matchSchemaFromSchemaName(schemaName) {\n    return this.pathTemplates.schemaPathTemplate.match(schemaName).schema;\n  }\n  /**\n   * Return a fully-qualified snapshot resource name string.\n   *\n   * @param {string} project\n   * @param {string} snapshot\n   * @returns {string} Resource name string.\n   */\n  snapshotPath(project, snapshot) {\n    return this.pathTemplates.snapshotPathTemplate.render({\n      project: project,\n      snapshot: snapshot\n    });\n  }\n  /**\n   * Parse the project from Snapshot resource.\n   *\n   * @param {string} snapshotName\n   *   A fully-qualified path representing Snapshot resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromSnapshotName(snapshotName) {\n    return this.pathTemplates.snapshotPathTemplate.match(snapshotName).project;\n  }\n  /**\n   * Parse the snapshot from Snapshot resource.\n   *\n   * @param {string} snapshotName\n   *   A fully-qualified path representing Snapshot resource.\n   * @returns {string} A string representing the snapshot.\n   */\n  matchSnapshotFromSnapshotName(snapshotName) {\n    return this.pathTemplates.snapshotPathTemplate.match(snapshotName).snapshot;\n  }\n  /**\n   * Return a fully-qualified subscription resource name string.\n   *\n   * @param {string} project\n   * @param {string} subscription\n   * @returns {string} Resource name string.\n   */\n  subscriptionPath(project, subscription) {\n    return this.pathTemplates.subscriptionPathTemplate.render({\n      project: project,\n      subscription: subscription\n    });\n  }\n  /**\n   * Parse the project from Subscription resource.\n   *\n   * @param {string} subscriptionName\n   *   A fully-qualified path representing Subscription resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromSubscriptionName(subscriptionName) {\n    return this.pathTemplates.subscriptionPathTemplate.match(subscriptionName).project;\n  }\n  /**\n   * Parse the subscription from Subscription resource.\n   *\n   * @param {string} subscriptionName\n   *   A fully-qualified path representing Subscription resource.\n   * @returns {string} A string representing the subscription.\n   */\n  matchSubscriptionFromSubscriptionName(subscriptionName) {\n    return this.pathTemplates.subscriptionPathTemplate.match(subscriptionName).subscription;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.schemaServiceStub && !this._terminated) {\n      return this.schemaServiceStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.iamClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.SchemaServiceClient = SchemaServiceClient;","map":{"version":3,"names":["jsonProtos","require","gapicConfig","version","SchemaServiceClient","constructor","opts","gaxInstance","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","_a","fallback","_b","window","fetch","Object","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","iamClient","IamClient","clientHeader","process","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","projectPathTemplate","PathTemplate","projectTopicPathTemplate","schemaPathTemplate","snapshotPathTemplate","subscriptionPathTemplate","listSchemas","PageDescriptor","listSchemaRevisions","_defaults","constructSettings","join","innerApiCalls","warn","initialize","schemaServiceStub","createStub","lookupService","google","pubsub","v1","SchemaService","schemaServiceStubMethods","methodName","callPromise","then","stub","args","Promise","reject","func","apply","err","descriptor","undefined","apiCall","createApiCall","getProjectId","callback","createSchema","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","parent","getSchema","name","commitSchema","rollbackSchema","deleteSchemaRevision","deleteSchema","validateSchema","validateMessage","listSchemasStream","defaultCallSettings","callSettings","merge","createStream","listSchemasAsync","asyncIterate","listSchemaRevisionsStream","listSchemaRevisionsAsync","getIamPolicy","setIamPolicy","testIamPermissions","projectPath","project","render","matchProjectFromProjectName","projectName","match","projectTopicPath","topic","matchProjectFromProjectTopicName","projectTopicName","matchTopicFromProjectTopicName","schemaPath","schema","matchProjectFromSchemaName","schemaName","matchSchemaFromSchemaName","snapshotPath","snapshot","matchProjectFromSnapshotName","snapshotName","matchSnapshotFromSnapshotName","subscriptionPath","subscription","matchProjectFromSubscriptionName","subscriptionName","matchSubscriptionFromSubscriptionName","close","resolve","exports"],"sources":["../../../src/v1/schema_service_client.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}